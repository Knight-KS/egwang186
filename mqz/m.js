function dataBase(path){this.path=path,this.file=new java.io.File(path),this.init=function(){this.file.getParentFile().exists()&&this.file.getParentFile().mkdirs(),this.file.exists()||this.file.createNewFile()}}function dataBase(path,limit){this.path=path,this.limit=limit,this.file=new java.io.File(path),this.init=function(){this.file.getParentFile().exists()&&this.file.getParentFile().mkdirs(),this.file.exists()||this.file.createNewFile()}}function fileCopy(oldPath,newPath){for(var oldFile=new java.io.File(oldPath),file=new java.io.File(newPath),fin=new java.io.FileInputStream(oldFile),fout=new java.io.FileOutputStream(file),content=java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE,4096),readByte=0;-1!=(readByte=fin.read(content));)fout.write(content,0,readByte);fin.close(),fout.close()}function thread(obj){r=new java.lang.Runnable(obj),t=new java.lang.Thread(r),t.start()}function download(urlStr,savePath){this.urlStr=urlStr,this.savePath=savePath}function download(urlStr,savePath,referer){this.urlStr=urlStr,this.savePath=savePath,this.referer=referer}function download(urlStr,savePath,referer,toekn){this.urlStr=urlStr,this.savePath=savePath,this.referer=referer,this.toekn=toekn}dataBase.prototype={constructor:dataBase,limit:300,read:function(){var len=this.file.length();if(0==len)return[];var content=java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE,len),fin=new java.io.FileInputStream(this.file);return fin.read(content),fin.close(),JSON.parse(new java.lang.String(content)).slice(-this.limit)},write:function(content){var fwt=new java.io.FileWriter(this.path,!1);fwt.write(content),fwt.close()},insert:function(obj){var list=this.read();null!=list&&""!=list||(list=[]),obj.Uid=(new Date).getTime(),obj.create_date=new Date,list.push(obj),list=list.slice(-this.limit),this.write(JSON.stringify(list))},deleteOne:function(path,v){var jsonData=this.read(),delList=this.getIndex(path,v);return delList.length>0?(jsonData.splice(delList[0],1),this.write(JSON.stringify(jsonData)),1):0},deleteAll:function(path,v){let nums=0;var jsonData=this.read();for(let index=0;index<jsonData.length;index++){var keyArr=path.split("."),value=jsonData[index];for(var i in keyArr)value=value[keyArr[i]];null!=value&&value==v&&(jsonData.splice(index,1),index--,nums++)}return nums>0&&this.write(JSON.stringify(jsonData)),nums},update:function(path,oldv,newv){var obj=this.findOne(path,oldv);if(0==obj)return 0;var jsonData=this.read(),key=path.split(".")[path.split(".").length-1];obj=this.change(obj,newv,key);for(let index=0;index<jsonData.length;index++)if(jsonData[index].id==obj.id)return jsonData[index]=obj,this.write(JSON.stringify(jsonData)),1;return-1},findOne:function(path,v){var jsonData=this.read();for(let x of jsonData){var keyArr=path.split("."),value=x;for(var i in keyArr)value=value[keyArr[i]];if(null!=value&&value==v)return x}return 0},findAll:function(path,v){var values=[],jsonData=this.read();for(let x of jsonData){var keyArr=path.split("."),value=x;for(var i in keyArr)value=value[keyArr[i]];null!=value&&value==v&&values.push(x)}return values},change:function(obj,value,o){for(var key in obj)key==o&&(obj[key]=value),"object"==typeof obj[key]&&change(obj[key]);return obj},getIndex:function(path,v){var index=0,values=[],jsonData=this.read();for(let x of jsonData){var keyArr=path.split("."),value=x;for(var i in keyArr)value=value[keyArr[i]];null!=value&&value==v&&values.push(index),index++}return values}},download.prototype={constructor:download,downLoadFromUrl:function(){var url,conn=new java.net.URL(this.urlStr).openConnection();conn.setConnectTimeout(3e3),conn.setRequestProperty("User-Agent","Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)"),conn.setRequestProperty("referer",this.referer),conn.setRequestProperty("token",this.token);var inputStream=conn.getInputStream(),getData=this.readInputStream(inputStream),file=new java.io.File(this.savePath),fos=new java.io.FileOutputStream(file);fos.write(getData),null!=fos&&fos.close(),null!=inputStream&&inputStream.close()},readInputStream:function(inputStream){for(var buffer=new java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE,4096),len=0,bos=new java.io.ByteArrayOutputStream;-1!=(len=inputStream.read(buffer));)bos.write(buffer,0,len);return bos.close(),bos.toByteArray()}};